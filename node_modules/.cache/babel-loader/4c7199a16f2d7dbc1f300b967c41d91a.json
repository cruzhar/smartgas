{"ast":null,"code":"async function fetchGet(url) {\n  try {\n    let response = await fetch(url, {\n      headers: {\n        Authorization: \"bearer \" + localStorage.getItem(\"token\")\n      }\n    });\n\n    if (response.status === 403) {\n      return {\n        data: null\n      };\n    }\n\n    let data = await response.json();\n    return data;\n  } catch (error) {\n    alert(error, \"Hubo un error en la aplicación. \");\n    console.error(error);\n  }\n}\n\nasync function fetchPut(url, data) {\n  let postObje = {\n    method: \"PUT\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\",\n      Authorization: \"bearer \" + localStorage.getItem(\"token\")\n    }\n  };\n\n  try {\n    let response = await fetch(url, postObje);\n\n    if (response.status === 403) {\n      return null;\n    }\n\n    let data = await response.json();\n    return data;\n  } catch (error) {\n    alert(error, \"Hubo un error en la aplicación. \");\n    console.error(error);\n  }\n}\n\nasync function fetchPost(url, data) {\n  let postObje = {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\",\n      Authorization: \"bearer \" + localStorage.getItem(\"token\")\n    }\n  };\n\n  try {\n    let response = await fetch(url, postObje);\n\n    if (response.status === 403) {\n      return null;\n    }\n\n    let data = await response.json();\n    return data;\n  } catch (error) {\n    alert(error, \"Hubo un error en la aplicación. \");\n    console.error(error);\n  }\n}\n\nasync function fetchDelete(url) {\n  try {\n    let response = await fetch(url, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: \"bearer \" + localStorage.getItem(\"token\")\n      }\n    });\n\n    if (response.status === 403) {\n      return null;\n    }\n\n    let data = await response.json();\n    return data;\n  } catch (error) {\n    alert(error, \"Hubo un error en la aplicación. \");\n    console.error(error);\n  }\n}\n\nexport { fetchGet, fetchDelete, fetchPost, fetchPut };","map":{"version":3,"sources":["C:/xampp/htdocs/smartgas/app/src/utils/Fetch.js"],"names":["fetchGet","url","response","fetch","headers","Authorization","localStorage","getItem","status","data","json","error","alert","console","fetchPut","postObje","method","body","JSON","stringify","fetchPost","fetchDelete"],"mappings":"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","sourcesContent":["async function fetchGet(url) {\n  try {\n    let response = await fetch(url, {\n      headers: { Authorization: \"bearer \" + localStorage.getItem(\"token\") },\n    });\n    if (response.status === 403) {\n      return { data: null };\n    }\n    let data = await response.json();\n    return data;\n  } catch (error) {\n    alert(error, \"Hubo un error en la aplicación. \");\n    console.error(error);\n  }\n}\n\nasync function fetchPut(url, data) {\n  let postObje = {\n    method: \"PUT\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\",\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\n    },\n  };\n  try {\n    let response = await fetch(url, postObje);\n    if (response.status === 403) {\n      return null;\n    }\n    let data = await response.json();\n    return data;\n  } catch (error) {\n    alert(error, \"Hubo un error en la aplicación. \");\n    console.error(error);\n  }\n}\n\nasync function fetchPost(url, data) {\n  let postObje = {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\",\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\n    },\n  };\n  try {\n    let response = await fetch(url, postObje);\n    if (response.status === 403) {\n      return null;\n    }\n\n    let data = await response.json();\n    return data;\n  } catch (error) {\n    alert(error, \"Hubo un error en la aplicación. \");\n    console.error(error);\n  }\n}\n\nasync function fetchDelete(url) {\n  try {\n    let response = await fetch(url, {\n      method: \"DELETE\",\n      headers: { Authorization: \"bearer \" + localStorage.getItem(\"token\") },\n    });\n    if (response.status === 403) {\n      return null;\n    }\n    let data = await response.json();\n    return data;\n  } catch (error) {\n    alert(error, \"Hubo un error en la aplicación. \");\n    console.error(error);\n  }\n}\n\nexport { fetchGet, fetchDelete, fetchPost, fetchPut };\n"]},"metadata":{},"sourceType":"module"}